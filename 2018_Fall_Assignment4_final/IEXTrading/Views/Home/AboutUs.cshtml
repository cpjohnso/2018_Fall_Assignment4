
@{
    ViewData["Title"] = "About Us";
}

<h2>AboutUs</h2>

<div>
    <p>

        <br />
        Dominique - This project helped us to learn both skills to be successful in technology and in business in general. On the technology side,
        this project taught us how to access APIs and create, edit, and delete items in databases. It also helped with giving us the opportunity to use LINQ
        by creating queries to find certain data within the databases. On the business side it helped us learn to think about how the data is
        used by end users as it is important to build technology that is useful to the end users. More specifically we learned to understand how stocks are
        picked in the finance world and it had us think of how we would want the system to select stocks to buy.
        <br />
        <br />
        Chris - This project taught me a lot about distributed information systems. I learned how apis are used to communicate data amongst distributed systems.
        This project and the associated template that it was built with validated and reinforced all previous instruction. I still need to work on language
        comprehension in c# and how values are passed between methods in the MVC framework. There were two abandoned functions that I worked on in this project.
        The first was a filter mechanism similar to the chart method. Specifically, i wanted to use the same drop down mechanic used in the chart method wherein
        the api query was determined by user input. I had to abandon this due to my inability to replicate the Chart method used in pulling Equity list data.
        With more time I would have learned to deconflict between numeric and nominal variables within model classes. The second was a News function that provided
        news articles relate to our selected stocks. Unfortunately, I could not make this work in time. All that being said, this was a fantastic assignment that
        did an effective job at demonstrating website development processes.
        <br />
        <br />
        <br />
        Carole - For this project, we were provided with a stock website template created with the Model-View-Controller (MVC) framework which we modified to add stock picking functionality. Below is an overview of the main tasks we undertook.
        <br />
        <br />
        As a first step, we had to determine what information we needed for picking stocks.  In addition to researching websites on stock picking, we were able to get input from experienced stockbrokers.
        <br />
        <br />
        Based on this research, we were able to narrow down what fields we needed to have available for our stock picking formula and we found an api which contained those fields: https://stock/market/collection/sector?collectionName=gainers. We modified the Company data model to retrieve and save the necessary fields from the stock api.
        <br />
        <br />
        Currently, we have this api set to retrieving gainers.  Ideally, we would want to retrieve the universe of stocks to make our calculations.  This would involve recursively retrieving stocks from all ten sectors.
        <br />
        <br />
        We initially had issues saving more than 30 records at a time.  As a workaround, we modified the getSymbols() function to only store a subset of records at a time.
        <br />
        <br />
        Currently, once the subset of symbols are loaded and saved, it is necessary to exit the page and come back in order to load more symbols.
        An enhancement would be automatically refresh the page after it is saved.
        <br />
        <br />
        We also get an out of bounds error when trying to load symbols beyond the range available in the gainers selection of the collections api.  We did not have the time to properly resolve this error.  Therefore, users will
        experience an error when trying to retrieve and save more than a total of 90 records for the Company table. 
        <br />
        <br />
        Once we had the data stored, then we had to add new functions (actions) to the controller file using Language-Integrated Query (LINQ) functionality to incorporate the stock picking buy and sell logic and retrieve the relevant stocks.
        <br />
        <br />
        We also created new views called Top5Picks.cshtml and Top5Sell.cshtml with the necessary format to display the results of the Top5picks and Top5Sell actions.
        <br />
        <br />
        The project reinforced what we learned in regards to C# programming, HTML and CSS.  It also introduced us to working with the MVC framework and we had extensive practice using the Visual Studio IDE as well as github for collaborative work.
        This was a good learning experience that provided us with a starting point for creating websites of our own in the future.
        This type of project can always be refined further.  We tried to balance the work effort to make sure we met the main requirements of the project, which was to develop a stock picking strategy, within the time contraints we had.
        <br />

    </p>
    <p>
    </p>
</div>